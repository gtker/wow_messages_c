name: Build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations.
      fail-fast: false

      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4
      - name: Install ninja
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
               sudo apt install ninja-build -y
          elif [ "$RUNNER_OS" == "Windows" ]; then
               choco install ninja
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
        shell: bash


      - name: Start dev terminal
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: >
          cmake
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          --preset ${{ matrix.c_compiler }}

      - name: Build
        run: cmake --build --preset ${{ matrix.c_compiler }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --preset ${{ matrix.c_compiler }} -C Debug
